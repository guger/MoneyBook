apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'androidx.navigation.safeargs.kotlin'

apply plugin: 'io.fabric'

apply from: '../dependencies.gradle'

android {
    compileSdkVersion versions.sdk

    defaultConfig {
        applicationId "at.guger.moneybook"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.sdk

        versionCode versions.major * 10**7 + versions.minor * 10**6 + versions.patch * 10**4 + versions.release * 10**3 + versions.beta * 10**2 + versions.dev
        versionName = versions.major + "." + versions.minor + "." + versions.patch

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix = ".dev"
            versionNameSuffix = "-dev-" + getBuildDate()
        }
        release {
            if (versions.beta > 0) versionNameSuffix = "-beta-" + versions.beta

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    bundle {
        density {
            // Different APKs are generated for devices with different screen densities; true by default.
            enableSplit true
        }
        abi {
            // Different APKs are generated for devices with different CPU architectures; true by default.
            enableSplit true
        }
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit false
        }
    }
    buildFeatures {
        dataBinding = true
    }
    sourceSets {
        androidTest {
            assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions {
        testOptions {
            unitTests {
                includeAndroidResources = true
            }
        }
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$deps.jdklibs"

    implementation project(":core")
    implementation project(":data")

    testImplementation "junit:junit:$deps.test.junit"
    testImplementation "org.robolectric:robolectric:$deps.test.robolectric"
    androidTestImplementation "androidx.test.ext:junit:$deps.test.ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$deps.test.espresso"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$deps.kotlin.common"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$deps.kotlin.coroutines"
    implementation "org.jetbrains.anko:anko-commons:$deps.kotlin.anko"
    implementation "org.jetbrains.anko:anko-design:$deps.kotlin.anko"

    implementation "org.koin:koin-android:$deps.koin"
    implementation "org.koin:koin-androidx-scope:$deps.koin"
    implementation "org.koin:koin-androidx-viewmodel:$deps.koin"

    implementation "com.google.firebase:firebase-analytics:$deps.firebase.analytics"
    implementation "com.crashlytics.sdk.android:crashlytics:$deps.firebase.crashlytics"

    implementation "androidx.core:core-ktx:$deps.androidx.core"
    implementation "androidx.appcompat:appcompat:$deps.androidx.appcompat"
    implementation "androidx.annotation:annotation:$deps.androidx.annotation"
    implementation "androidx.fragment:fragment-ktx:$deps.androidx.fragment"
    implementation "androidx.preference:preference:$deps.androidx.preference"
    implementation "androidx.biometric:biometric:$deps.androidx.biometric"
    implementation "androidx.constraintlayout:constraintlayout:$deps.androidx.constraintlayout"
    implementation "androidx.viewpager2:viewpager2:$deps.androidx.viewpager2"
    implementation "androidx.recyclerview:recyclerview:$deps.androidx.recyclerview"
    implementation "androidx.cardview:cardview:$deps.androidx.cardview"

    implementation "com.google.android.material:material:$deps.google.material"

    implementation "androidx.lifecycle:lifecycle-extensions:$deps.arch.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$deps.arch.lifecycle"
    kapt "androidx.lifecycle:lifecycle-common-java8:$deps.arch.lifecycle"

    implementation "androidx.navigation:navigation-fragment-ktx:$deps.arch.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$deps.arch.navigation"

    implementation "androidx.paging:paging-runtime-ktx:$deps.arch.paging"

    implementation "androidx.work:work-runtime-ktx:$deps.arch.work"

    implementation "com.jakewharton.threetenabp:threetenabp:$deps.libs.threetenabp"
    implementation "com.afollestad.assent:core:$deps.libs.assent"
    implementation "com.afollestad.assent:rationales:$deps.libs.assent"
    implementation "com.github.PhilJay:MPAndroidChart:$deps.libs.charts"
    implementation "com.afollestad:material-cab:$deps.libs.material_cab"
    implementation "com.afollestad.material-dialogs:core:$deps.libs.material_dialogs"
    implementation "com.afollestad.material-dialogs:color:$deps.libs.material_dialogs"
    implementation "com.afollestad.material-dialogs:datetime:$deps.libs.material_dialogs"
    implementation "com.maltaisn:calcdialog:$deps.libs.calcdialog"
    implementation "com.maltaisn:icondialog:$deps.libs.icondialog"
    implementation "com.maltaisn:recurpicker:$deps.libs.recurpickerdialog"

    implementation(name: 'nachos', ext: 'aar')
    implementation(name: 'strokepiechart', ext: 'aar')
}

apply plugin: 'com.google.gms.google-services'